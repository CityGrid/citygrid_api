#!/usr/bin/env ruby
# This script tests against the APIs to check if they are working.
# Should be migrated into actual tests once APIs stabilize a bit.

$:<< File.expand_path("./lib")

require "rubygems"
require File.expand_path("./lib/citygrid")
require "ap"

def run_with_rescue
  begin
    yield
  rescue => ex
    puts "failed with: #{ex}"
    puts ex.message
    puts ex.backtrace
  end
end

# This script tests AdCenter APIs in QA env
# =========================================
auth_token = 'e8e9707394a8830891d6a658969aadc1'
run_with_rescue do
  puts "============Trying Authentication/Login==============="
  res = CityGrid.login(:username => 'QASalesCoord', :password => 'pppppp')
  if res.authToken
    auth_token = res.authToken
    puts "succeeded"
    puts auth_token
  else
    # default auth_token to test other APIs
    puts "failed"
    ap res
    auth_token = 'e8e9707394a8830891d6a658969aadc1'
  end
end

run_with_rescue do
  puts "============Trying Account/Get_account_info:by Name==============="
  res = CityGrid::API::AdCenter::Account.search(:token => auth_token, :userName => 'QASalesCoord')
  if !res.empty? && res.accountResources.first.response.code.to_i == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Account/Get_account_info: by ID==============="
  res = CityGrid::API::AdCenter::Account.search(
    :token => auth_token,
    :id    => 1250702
  )
  if !res.empty? && res.accountResources.first.response.code.to_i == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Account/Create==============="
  res = CityGrid::API::AdCenter::Account.mutate(
    :token => auth_token,
    "mutateOperationListResource" => [{
      "operator" => "ADD",
      "operand"  => {
        "firstName"    => "nico-api",
        "lastName"     => "gomez-api",
        "phone"        => "9001111112",
        "email"        => "goodtry#{rand(10000000)}@a.com",
        "userName"     => "goodtry#{rand(10000000)}",
        "password"     =>"pppppp",
        "businessName" =>"businessProveApi",
        "address1"     =>"dir-api",
        "city"         =>"montevideo",
        "state"        =>"Montevideo",
        "zipCode"      =>"90069"
      }
    }]
  )
  if !res.empty? && res.accountResources.first.response.code.to_i == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Account/Create_cg_only==============="
  res = CityGrid::API::AdCenter::Account.create(
    :token => auth_token,
    "mutateOperationListResource" => [{
      "operator" => "ADD",
      "operand"  => {
        "firstName"    => "nico-api",
        "lastName"     => "gomez-api",
        "phone"        => "9001111112",
        "businessName" =>"businessProveApi",
        "address1"     =>"dir-api",
        "city"         =>"montevideo",
        "state"        =>"Montevideo",
        "zipCode"      =>"90069"
      }
    }]
  )
  if !res.empty? && res.accountResources.first.response.code.to_i == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Place/ADD==============="
  res = CityGrid::API::Content::Places.mutate({:token => auth_token, "mutateOperationListResource" => [ { "operator" => "ADD", "operand" => {:accountId => 2280872, "name" => "Pi on sunset in LAAAAAAAAAAAAAA", "address_1" => "Jackson 2102", "address_2" => "", "city" => "Los Angeles", "state" => "California", "postal_code" => 90025, "phone_number" => 3103333333, "website_url" => "pi.com", "primary_tag_id" => "3623","bullet1" => "Knoll bullet 1", "tagline" => "my tagline", "primary_tag_id" => 3623, "secondary_tags" => '1776'} } ] })
  if !res.empty? && res["resources"][0]["response"]["code"].to_i == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Report==============="
  run_with_rescue do
    res = CityGrid::API::AdCenter::Reports.search(
      :campaignId => 786,
      :period     => 'last30Days',
      :token      => auth_token
    )
    perf_resource = !res.empty? && res.dailyCampaignPerformanceResources
    if perf_resource && perf_resource.length > 0
      puts "succeed"
    else
      puts "failed"
      ap res
    end
  end
end

run_with_rescue do
  puts "============Trying Campaigns=============="
  res = CityGrid::API::AdCenter::Campaign.mutate(
    :token => auth_token,
    :mutateOperationListResource => [{
      :operator => "ADD",
      :operand  => {
        :accountId => "123",
        :name      => "PleaseWork6",
        :startDate => "20110625",
        :endDate   => "20111011",
        :product   => "PERFORMANCE",
        :budget    => {:amount => 30000},
        :mopId     => 2961
      }
    }]
  )
  if !res.empty? && res.campaignResources.first.response.code == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Adgroups=============="
  res = CityGrid::API::AdCenter::AdGroup.mutate(
    :token => auth_token,
    "mutateOperationListResource" => [{
      "operator" => "ADD",
      "operand"  => {
        "placeId"            => "10728522",
        "campaignId"         => "456",
        "contractTermMonths" =>"12",
        "monthlyServiceFee"  => "19.95",
        "budgetBids" => [{
          "actionTargetName" => "map & directions",
          "ppe"              => "1.80"
        }]
      }
    }]
  )
  if !res.empty? && res.adGroups.first.responseStatus.code == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying AdGroup Ads=============="
  res = CityGrid::API::AdCenter::AdGroupAd.mutate(
    :token => auth_token,
    "mutateOperationListResource" => [{
      "operator" => "ADD",
      "operand" => {
        "groupId" => "2861",
        "ad"=>{
          "type" =>"PERFORMANCE_AD",
          "url" => "http://www.google.com",
          "displayUrl" => "Google Display.com",
          "tagline" => "myTagline",
          "headline" =>"Headline",
          "description_1" => "Some description 1"
        }
      }
    }]
  )
  if !res.empty? && res.adResources.first.response.code == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying AdGroupCriterion/Search=============="
  res = CityGrid::API::AdCenter::AdGroupCriterion.search(:token => auth_token, :adGroupId => 6)
  if !res.empty? && res.adGroupCriterionResources.first.response.code == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying AdGroupCriterion/Mutate=============="
  res = CityGrid::API::AdCenter::AdGroupCriterion.mutate(
    :token => auth_token,
    "mutateOperationListResource" => [{
      "operator" => "ADD",
      "operand" => {
        "adGroupId" => "2",
        "adGroupAdId" => "1",
        "adGroupCriterionId" =>
        "1722",
        "type" => "2"
      }
    }, {
      "operator" => "REMOVE",
      "operand" => {
        "adGroupId" => "2",
        "adGroupAdId" => "1",
        "adGroupCriterionId" => "1722",
        "type" => "2"
      }
    }]
  )
  if !res.empty? && res.adGroupCriterionResources.first.response.code == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Categories: By Listing ID=============="
  res = CityGrid::API::AdCenter::Category.search(
    :token         => auth_token,
    :listingId     => 3680332,
    :startIndex    => 0,
    :numberResults => 10
  )
  if !res.empty? && res.response.code == 200 && !res.resources.empty?
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying Categories: By Query=============="
  res = CityGrid::API::AdCenter::Category.search(
    :keywords      => "pizza",
    :startIndex    => 0,
    :numberResults => 10,
    :token         => auth_token
  )
  if !res.empty? && res.response.code == 200 && !res.resources.empty?
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============  Trying Budget Suggestion=============="
  res = CityGrid::API::AdCenter::Budget.search(:listingId => 833372, :token => auth_token)
  if !res.empty? && res.budgetSuggestionResources.length > 0
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying MOP: search=============="
  res = CityGrid::API::AdCenter::MethodOfPayment.search(:accountId => 111, :token => auth_token)
  if !res.empty? && !res.mopResources.empty?
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying MOP: mutate=============="
  res = CityGrid::API::AdCenter::MethodOfPayment.mutate({:token => auth_token, "mutateOperationListResource" => [ { "operator" => "ADD","operand" => { "cardNumber" => "4112344112344113", "expirationMonth" => 12, "expirationYear" => 2012, "cardholderName" => "Ara Tatous", "cardType" => "Visa", "state" => "NY" , "description" => "test addMOP", "firstName" => "Ara", "lastName" => "Tatous", "phoneNumber" => "(818)749-3717", "address1" => "3131 Montrose Ave", "address2" => "Apt. 9", "city" => "LaCrescenta", "postalCode" => "10016", "accountId" => 3440, "securityCode" => "719", "paymentType" => "Credit Card" } } ]})
  if !res.empty? && res.resources.first.response.code == 200
    puts "succeeded"
  else
    puts "failed"
    ap res
  end
end

run_with_rescue do
  puts "============Trying GEO=============="
  res = CityGrid::API::AdCenter::AdGroupGeo.search(
    :token          => auth_token,
    "streetAddress" => "200Robertson Blvd",
    "city"          => "Beverly Hills",
    "state"         => "CA",
    "zipCode"       => "90211"
  )
  if !res.empty? && !res.geocodeResponse.empty?
    puts "succeeded"
  else
    puts "Failed"
    ap res
  end
end